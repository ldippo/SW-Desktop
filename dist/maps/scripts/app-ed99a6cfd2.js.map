{"version":3,"sources":["scripts/app-ed99a6cfd2.js"],"names":["angular","module","speciesDirective","directive","restrict","template","scope","url","species","controller","SpeciesController","controllerAs","bindToController","SpeciesService","activate","getSpecies","then","getSingleSpecies","data","vm","this","$inject","planetDirective","id","planet","PlanetController","PlanetsService","getPlanet","$http","speciesConst","log","getSpeciesComplete","response","results","getSpeciesErr","error","get","api","API","service","constant","planetsConst","getPlanets","getPlanetsComplete","getPlanetsErr","getPlanetComplete","getPlanetErr","planetsDirective","templateUrl","planets","PlanetsController","PeopleService","peopleConst","getPeople","next","getPeopleComplete","getPeopleErr","length","peopleDirective","people","PeopleController","nextPage","console","MainController","awesomeThings","classAnimation","creationDate","runBlock","$log","debug","run","routerConfig","$stateProvider","$urlRouterProvider","state","otherwise","config","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-ed99a6cfd2.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular.module('starwars.species', [\n        \n    ]);\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('starwars.species')\n        .directive('speciesDirective', speciesDirective);\n  \n    function speciesDirective() {\n        // Usage:\n        //\n        // Creates:\n        //\n        var directive = {\n            restrict: 'EA',\n            template: '<span>{{vm.species.name}}</span>',\n            scope: {\n                url: '@speciesLink',\n                species: '=?bind'\n            },          \n            controller: SpeciesController,   \n            controllerAs: 'vm',\n            bindToController: true          \n        };\n        return directive;\n     \n    }\n    /* @ngInject */\n    function SpeciesController (SpeciesService) {\n        var vm = this;\n        var url = vm.url;\n        vm.species = {};\n        \n        activate();\n        \n        function activate() {\n            \n            return getSpecies().then(function() {\n    \n            });        \n        }\n        \n        function getSpecies() {\n            return SpeciesService.getSingleSpecies(url)\n                    .then(function(data) {\n                        vm.species = data;\n                        return vm.species;\n                    });\n        }      \n    }\n})();\n(function() {\n    'use strict';\n\n    angular.module('starwars.planets', [\n        \n    ]);\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('starwars.planets')\n        .directive('planetDirective', planetDirective);\n  \n    function planetDirective() {\n        // Usage:\n        //\n        // Creates:\n        //\n        var directive = {\n            restrict: 'EA',\n            template: '<span id=\"{{vm.planet.name}}-{{vm.id}}\">{{vm.planet.name}}</span><span for=\"{{vm.planet.name}}-{{vm.id}}\" class=\"mdl-tooltip\">HyperText Markup Language</span>',\n            scope: {\n                url: '@planetLink',\n                id: '@id',\n                planet: '=?bind'\n            },          \n            controller: PlanetController,   \n            controllerAs: 'vm',\n            bindToController: true          \n        };\n        return directive;\n     \n    }\n    /* @ngInject */\n    function PlanetController (PlanetsService) {\n        var vm = this;\n        var url = vm.url;\n        vm.planet = {};\n        \n        activate();\n        \n        function activate() {\n            \n            return getPlanet().then(function() {\n    \n            });        \n        }\n        \n        function getPlanet() {\n            return PlanetsService.getPlanet(url)\n                    .then(function(data) {\n                        vm.planet = data;\n                        return vm.planet;\n                    });\n        }      \n    }\n})();\n(function() {\n'use strict';\n\n    angular\n        .module('starwars.species')\n        .service('SpeciesService', SpeciesService);\n\n    SpeciesService.$inject = ['$http', 'planetsConst', '$log'];\n    function SpeciesService($http, speciesConst, log) {\n        this.getSpecies = getSpecies;\n        this.getSingleSpecies = getSingleSpecies;\n        \n        var api = speciesConst.API;\n\n        ////////////////\n        function getSpecies() {\n            return $http.get(api)\n                .then(getSpeciesComplete)\n                .catch(getSpeciesErr);\n\n            function getSpeciesComplete(response) {\n                return response.data.results;\n            }\n\n            function getSpeciesErr(error) {\n                log('XHR Failed for getSpecies.' + error.data);\n            }\n        }\n        \n        function getSingleSpecies(url) {\n        \n            return $http.get(url)\n                .then(getSpeciesComplete)\n                .catch(getSpeciesErr);\n\n            function getSpeciesComplete(response) {\n                return response.data;\n            }\n\n            function getSpeciesErr(error) {\n                log('XHR Failed for getPlanet.' + error.data);\n            }\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('starwars.species')\n        .constant('speciesConst', {\n            API: 'http://swapi.co/api/species'\n        });\n})();\n(function() {\n'use strict';\n\n    angular\n        .module('starwars.planets')\n        .service('PlanetsService', PlanetsService);\n\n    PlanetsService.$inject = ['$http', 'planetsConst', '$log'];\n    function PlanetsService($http, planetsConst, log) {\n        this.getPlanets = getPlanets;\n        this.getPlanet = getPlanet;\n        \n        var api = planetsConst.API;\n\n        ////////////////\n        function getPlanets() {\n            return $http.get(api)\n                .then(getPlanetsComplete)\n                .catch(getPlanetsErr);\n\n            function getPlanetsComplete(response) {\n                return response.data.results;\n            }\n\n            function getPlanetsErr(error) {\n                log('XHR Failed for getPlanets.' + error.data);\n            }\n        }\n        \n        function getPlanet(url) {\n        \n            return $http.get(url)\n                .then(getPlanetComplete)\n                .catch(getPlanetErr);\n\n            function getPlanetComplete(response) {\n                return response.data;\n            }\n\n            function getPlanetErr(error) {\n                log('XHR Failed for getPlanet.' + error.data);\n            }\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('starwars.planets')\n        .directive('planetsDirective', planetsDirective);\n  \n    function planetsDirective() {\n        // Usage:\n        //\n        // Creates:\n        //\n        var directive = {\n            restrict: 'EA',\n            templateUrl: 'app/components/planets/planets.tpl.html',\n            scope: {\n                planets: '=?bind'\n            },          \n            controller: PlanetsController,   \n            controllerAs: 'vm',\n            bindToController: true          \n        };\n        return directive;\n     \n    }\n    /* @ngInject */\n    function PlanetsController (PlanetsService) {\n        var vm = this;\n        vm.planets = [];\n        \n        activate();\n        \n        function activate() {\n            return getPlanets().then(function() {\n\n            })        \n        }\n        \n        function getPlanets() {\n            return PlanetsService.getPlanets()\n                    .then(function(data) {\n                        vm.planets = data;\n                        return vm.planets;\n                    })\n        }      \n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('starwars.planets')\n        .constant('planetsConst', {\n            API: 'http://swapi.co/api/planets'\n        });\n})();\n(function() {\n    'use strict';\n    angular.module('starwars.people',[]);\n})();\n(function() {\n'use strict';\n\n    angular\n        .module('starwars.people')\n        .service('PeopleService', PeopleService);\n\n    PeopleService.$inject = ['$http', 'peopleConst', '$log'];\n    function PeopleService($http, peopleConst, log) {\n        this.getPeople = getPeople;\n        \n\n        ////////////////\n        function getPeople(next) {\n        \n        if(next.length === 0){\n            var api = peopleConst.API\n        }\n        else {\n            var api = next; \n        }\n              \n        return $http.get(api)\n            .then(getPeopleComplete)\n            .catch(getPeopleErr);\n\n        function getPeopleComplete(response) {\n   \n            return response.data;\n        }\n\n        function getPeopleErr(error) {\n            log('XHR Failed for getPeople.' + error.data);\n        }\n    }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('starwars.people')\n        .directive('peopleDirective', peopleDirective);\n    \n    function peopleDirective() {\n        // Usage:\n        //\n        // Creates:\n        //\n        var directive = {\n            restrict: 'EA',\n            templateUrl: 'app/components/people/people.tpl.html',\n            scope: {\n                people: '=?bind'\n            },          \n            controller: PeopleController,   \n            controllerAs: 'vm',\n            bindToController: true          \n        };\n        return directive;\n     \n    }\n    /* @ngInject */\n    \n    function PeopleController (PeopleService) {\n        var vm = this;\n        vm.people = [];\n        vm.nextPage = \"\";\n        activate();\n        \n        function activate() {\n            return getPeople();      \n        }\n        \n        function getPeople() {\n            return PeopleService.getPeople(vm.nextPage)\n                    .then(function(data) {\n                        vm.people = data.results;\n                        vm.nextPage = data.next;\n                        console.log(vm.nextPage);\n                        return vm.people;\n                    })\n        }\n        \n        vm.next = function() {  \n            return getPeople(vm.nextPage);\n        }      \n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('starwars.people')\n        .constant('peopleConst', {\n            API: 'http://swapi.co/api/people'\n        });\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('starwars', [\n        'ngAnimate', \n        'ngCookies', \n        'ngTouch', \n        'ngSanitize', \n        'ngMessages', \n        'ngAria', \n        'ngResource', \n        'ui.router',\n        'starwars.species',\n        'starwars.planets',\n        'starwars.people'\n        ]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('starwars')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController() {\n    var vm = this;\n    \n    vm.awesomeThings = [];\n    vm.classAnimation = '';\n    vm.creationDate = 1453657147414;\n\n    activate();\n\n    function activate() {\n      \n      \n    }\n\n   \n\n    \n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('starwars')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('starwars')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('home', {\n        url: '/',\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'main'\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n\n(function() {\n  'use strict';\n\n  angular\n    .module('starwars');\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('starwars')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n\n  }\n\n})();\n\nangular.module(\"starwars\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<div class=\\\"mdl-layout__content mdl-js-layout mdl-layout--fixed-header\\\"><header class=\\\"mdl-layout__header\\\"><div class=\\\"mdl-layout__header-row\\\"><span class=\\\"mdl-layout-title\\\">Star Wars</span></div></header><main><div class=\\\"page-content\\\"><people-directive></people-directive></div></main></div>\");\n$templateCache.put(\"app/components/people/people.tpl.html\",\"<h1>The People:</h1><h3>Add more <button ng-click=\\\"vm.next()\\\" class=\\\"mdl-button mdl-js-button mdl-button--fab mdl-button--colored\\\"><i class=\\\"material-icons\\\">add</i></button></h3><div class=\\\"mdl-grid\\\"><div class=\\\"mdl-cell mdl-cell--3-col\\\" ng-repeat=\\\"person in vm.people track by $index\\\"><div class=\\\"mdl-card mdl-shadow--2dp\\\"><div class=\\\"mdl-card__title mdl-card--expand\\\"><h2 class=\\\"mdl-card__title-text\\\">{{person.name}}</h2></div><div class=\\\"mdl-card__supporting-text\\\"><p><b>Height:</b> {{person.height}} cm</p><p><b>Mass:</b> {{person.mass}} kg</p><p><b>Eye Color:</b> {{person.eye_color}}</p><p><b>Hair Color:</b> {{person.hair_color}}</p><p><b>Homeworld:</b><planet-directive id=\\\"{{$index}}\\\" planet-link=\\\"{{person.homeworld}}\\\"></planet-directive></p><p><b>Birth Date:</b> {{person.birth_year}}</p><p><b>Species:</b><species-directive species-link=\\\"{{person.species[0]}}\\\"></species-directive></p></div></div></div></div>\");\n$templateCache.put(\"app/components/planets/planets.tpl.html\",\"<div ng-repeat=\\\"planet in vm.planets\\\">{{planet.name}}</div>\");\n$templateCache.put(\"app/components/species/species.tpl.html\",\"<div ng-repeat=\\\"species in vm.species\\\">{{species.name}}</div>\");}]);"],"sourceRoot":"/source/"}